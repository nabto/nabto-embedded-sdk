name: ARM Build

on:
  push:

jobs:
  build:
    strategy:
      matrix:
        arch: [armv6, armv7, arm64v8]
        include:
          - arch: armv6
            cflags: -march=armv6 -marm
            compiler: arm-linux-gnueabihf
            toolchain: https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
          - arch: armv7
            cflags: -march=armv7
            compiler: arm-linux-gnueabihf
            toolchain: https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
          - arch: arm64v8
            cflags: -march=armv8-a
            compiler: aarch64-linux-gnu
            toolchain: https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Create directory
      run: mkdir toolchain

    - name: Get 32-bit toolchain
      working-directory: toolchain
      run: curl -sSL ${{ matrix.toolchain }}  | tar -Jxf - --strip-components=1

    - name: Configure CMake
      env:
        CC: ${{github.workspace}}/toolchain/bin/${{ matrix.compiler }}-gcc
        CXX: ${{github.workspace}}/toolchain/bin/${{ matrix.compiler }}-g++
        CFLAGS: ${{ matrix.cflags }}
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/artifacts -B ${{github.workspace}}/build

    - name: Build
      run: cmake --build ${{github.workspace}}/build --parallel

    - name: Install
      run: cmake --build ${{github.workspace}}/build --target install

    - name: Print architecture
      run: file ${{ github.workspace }}/artifacts/bin/tcp_tunnel_device

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifacts_${{ matrix.arch }}
        path: |
          ${{ github.workspace }}/artifacts/bin/tcp_tunnel_device
          ${{ github.workspace }}/artifacts/bin/thermostat_device
        if-no-files-found: error
