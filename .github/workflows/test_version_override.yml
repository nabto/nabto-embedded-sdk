name: Test Version Override

on:
  push:
  pull_request:

jobs:
  test-version-override:
    timeout-minutes: 30
    name: Test Version Override - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            preset_name: linux_shared_library
          - os: windows-2022
            preset_name: windows_shared_library
          - os: macos-15
            preset_name: mac_arm64_shared_library

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.x'

      - name: Install Ninja (Ubuntu)
        if: matrix.os == 'ubuntu-24.04'
        run: sudo apt-get update && sudo apt-get install -y ninja-build

      - name: Install Ninja (macOS)
        if: matrix.os == 'macos-15'
        run: brew install ninja

      - name: Configure CMake with custom version
        run: cmake --preset ${{ matrix.preset_name }} -DNABTO_DEVICE_VERSION="1.2.3-test"

      - name: Build shared library
        run: cmake --build --preset ${{ matrix.preset_name }} --target install

      - name: Verify version in Linux shared library
        if: matrix.os == 'ubuntu-24.04'
        run: |
          echo "Checking for version string in libnabto_device.so..."
          if strings build/${{ matrix.preset_name }}/install/lib/libnabto_device.so | grep -q "1.2.3-test"; then
            echo "✓ Version string '1.2.3-test' found in Linux shared library"
          else
            echo "✗ Version string '1.2.3-test' NOT found in Linux shared library"
            exit 1
          fi

      - name: Verify version in Windows DLL
        if: matrix.os == 'windows-2022'
        shell: pwsh
        run: |
          Write-Host "Checking for version string in nabto_device.dll..."
          $dllPath = "build/${{ matrix.preset_name }}/install/bin/nabto_device.dll"
          $content = Get-Content $dllPath -Raw -Encoding UTF8
          if ($content -match "1\.2\.3-test") {
            Write-Host "✓ Version string '1.2.3-test' found in Windows DLL"
          } else {
            Write-Host "✗ Version string '1.2.3-test' NOT found in Windows DLL"
            exit 1
          }

      - name: Verify version in macOS shared library
        if: matrix.os == 'macos-15'
        run: |
          echo "Checking for version string in libnabto_device.dylib..."
          if strings build/${{ matrix.preset_name }}/install/lib/libnabto_device.dylib | grep -q "1.2.3-test"; then
            echo "✓ Version string '1.2.3-test' found in macOS shared library"
          else
            echo "✗ Version string '1.2.3-test' NOT found in macOS shared library"
            exit 1
          fi
