name: Build And Test Linux Mac Windows

on:
  push:
  release:
    types: [published]

jobs:
  build-and-test:
    timeout-minutes: 20
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-24.04:
            workflow: "linux_fetchcontent"
          - ubuntu-24.04:
            workflow: "linux_vcpkg"
          - ubuntu-24.04:
            workflow: "linux_vcpkg_dtls_client_only"

          - windows-2022:
            workflow: "windows_vcpkg_static"

          - macos-12:
            workflow: mac_vcpkg_x86_64
          - macos-12:
            workflow: mac_vcpkg_arm64
          - macos-12:
            workflow: mac_fetchcontent_universal

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: cmake --workflow --preset ${{ matrix.workflow }}

      - if: matrix.os == 'windows-2022'
        name: Test run
        run: |
          netsh advfirewall firewall add rule name="embedded_unit_test" dir=in action=allow program="${{ github.workspace }}\build\${{ matrix.workflow }}\install\bin\embedded_unit_test.exe" enable=yes
          ${{ github.workspace }}\build\${{ matrix.workflow }}\install\bin\embedded_unit_test.exe -l test_suite --detect_memory_leaks=0

      - if: matrix.os != 'windows-2022'
        name: Test run
        run: ${{ github.workspace }}/build/${{ matrix.workflow }}/install/bin/embedded_unit_test -l test_suite --detect_memory_leaks=0

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts_${{ matrix.workflow }}
          path: ${{ github.workspace }}/artifacts
          if-no-files-found: warn
