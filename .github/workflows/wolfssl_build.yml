name: Wolfssl Build

on:
  push:
  release:
    types: [ published ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: prepare wolfssl
      run: mkdir ${{ github.workspace }}/wolfssl-build && cd ${{ github.workspace }}/wolfssl-build && git clone https://github.com/wolfSSL/wolfssl
      run: mkdir ${{ github.workspace }}/wolfssl-build && cd ${{ github.workspace }}/wolfssl-build && wget -q -O wolfssl.zip https://github.com/wolfSSL/wolfssl/archive/738d79c5d5c4160e8bfc863323b4bb6f075035a3.tar.gz && tar -xzf - --strip-components=1

    - name: configure wolfssl
      run: cd ${{ github.workspace }}/wolfssl-build && ./autogen.sh && ./configure --prefix=/usr --enable-ecc --enable-dsa --enable-dtls --enable-aesccm --enable-alpn --enable-debug --enable-certgen --enable-keygen --enable-harden --enable-sni --enable-sp-math-all=small CFLAGS="-DKEEP_PEER_CERT -DWOLFSSL_PUBLIC_MP -DWOLFSSL_PUBLIC_ECC_ADD_DBL"

    - name: build wolfssl
      run: cd ${{ github.workspace }}/wolfssl-build && make -j 8 && ./wolfcrypt/benchmark/benchmark -ecc && sudo make install

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Configure cmake
      run: mkdir build-dir && cd build-dir && cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/artifacts -DNABTO_USE_MBEDTLS=0 -DNABTO_USE_WOLFSSL=1 ..

    - name: Build
      run: cmake --build build-dir --parallel

    - name: Install
      run: cmake --build build-dir --target install

    - name: Test run
      run: ${{ github.workspace }}/artifacts/bin/embedded_unit_test --log_format=JUNIT --log_sink=unit_test_wolfssl.xml --detect_memory_leaks=0

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: unit_test_wolfssl
        path: ${{ github.workspace }}/unit_test_wolfssl.xml
        if-no-files-found: warn

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-18.04
    # the build-and-test job might be skipped, we don't need to run this job then
    if: github.event_name != 'release' && (success() || failure())

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: test_reports

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.15
        with:
          check_name: Unit Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: test_reports/**/*.xml
